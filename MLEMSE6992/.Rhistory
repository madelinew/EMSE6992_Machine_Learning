print(cr)
minage <- cdf$age
maxage <- cdf$age
mdf <- rbind(mdf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,5],
day = cr[1,6], month = cr[1,7], year = cr[1,8],
modelyear = cr[1,10], make = cr[1,11], cellphoneuse = cr[1,12]))
}
return(mdf)
}
nodf(fatal_16ds)
View(yesdf15)
View(fatal_15)
View(fatal_15)
View(fatal_15ds)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf$dridistract2 <- na_if(ndf$dridistract2, 0)
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- na_if(ndf$dridistract3, 0)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15 <- separatingDriDistract(fatal_15)
fatal_15 <- fatal_YYsetup(FARS_15, 2015)
fatal_15 <- separatingDriDistract(fatal_15)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf$dridistract2 <- ndf %>% replace_na(dridistract2 = 0)
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- ndf %>% replace_na(dridistract3 = 0)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15 <- separatingDriDistract(fatal_15)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf$dridistract2 <- ndf$dridistract2 %>% replace_na(0)
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- ndf$dridistract3 %>% replace_na(0)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15 <- separatingDriDistract(fatal_15)
fatal_15 <- fatal_YYsetup(FARS_15, 2015)
fatal_15 <- separatingDriDistract(fatal_15)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf[is.na(ndf)] <- 0
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15 <- separatingDriDistract(fatal_15)
fatal_16 <- separatingDriDistract(fatal_16)
fatal_16 <- fatal_YYsetup(FARS_16, 2016)
fatal_16 <- separatingDriDistract(fatal_16)
fatal_15ds <- findingCellCases(fatal_15, 15)
fatal_16ds <- findingCellCases(fatal_16, 16)
fatal_15ds <- findingDuplicateCases(fatal_15ds)
fatal_16ds <- findingDuplicateCases(fatal_16ds)
yesdf15 <- yesdf(fatal_15ds)
yesdf16 <- yesdf(fatal_16ds)
X2017FARS <- read_excel("~/Documents/EMSE 6992 ML/Final Project/Data/2017FARS.xls",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
FARS_17 <- as.data.frame(X2017FARS, header = TRUE, as.is=TRUE)
fatal_17 <- fatal_YYsetup(FARS_17, 2017)
fatal_17 <- separatingDriDistract(fatal_17)
fatal_17ds <- findingCellCases(fatal_17, 17)
fatal_17ds <- findingDuplicateCases(fatal_17ds)
nodf <- function(df) {
ndf <- df[df$duplicate == "no",]
drop <- c("duplicate", "pernum")
ndf = ndf[,!(names(ndf) %in% drop)]
ndf$casestateveh <- paste(ndf$casenum,ndf$statenum,ndf$vehnum, sep = "")
mdf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), modelyear = numeric(), make = numeric(), cellphoneuse = numeric())
caselist <- unique(ndf$casestateveh)
for (i in caselist) {
cdf <- ndf[ndf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
print(cr)
minage <- cdf$age
maxage <- cdf$age
mdf <- rbind(mdf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,5],
day = cr[1,6], month = cr[1,7], year = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], cellphoneuse = cr[1,11]))
}
return(mdf)
}
nodf15 <- nodf(fatal_15ds)
nodf15 <- nodf(fatal_15ds)
nodf <- function(df) {
ndf <- df[df$duplicate == "no",]
drop <- c("duplicate", "pernum")
ndf = ndf[,!(names(ndf) %in% drop)]
ndf$casestateveh <- paste(ndf$casenum,ndf$statenum,ndf$vehnum, sep = "")
mdf <- data.frame(casenum = numeric(), statenum = numeric(), vehnum = numeric(), persontotal = numeric(),
agemin = numeric(), agemax = numeric(),
numfatal = numeric(), day = numeric(), month = numeric(),
year = numeric(), modelyear = numeric(), make = numeric(), cellphoneuse = numeric())
caselist <- unique(ndf$casestateveh)
for (i in caselist) {
cdf <- ndf[ndf$casestateveh == i,]
pt <- length(cdf$casenum)
cr <- cdf
minage <- cdf$age
maxage <- cdf$age
mdf <- rbind(mdf, data.frame(casenum = cr[1,1], statenum = cr[1,2], vehnum = cr[1,3],
persontotal = pt, agemin = minage, agemax = maxage, numfatal = cr[1,5],
day = cr[1,6], month = cr[1,7], year = cr[1,8],
modelyear = cr[1,9], make = cr[1,10], cellphoneuse = cr[1,11]))
}
return(mdf)
}
nodf15 <- nodf(fatal_15ds)
nodf16 <- nodf(fatal_16ds)
yesdf17 <- yesdf(fatal_17ds)
nodf17 <- nodf(fatal_17ds)
fulldataset <- rbind(yesdf15, nodf15, yesdf16, nodf16, yesdf17, nodf17)
View(fulldataset)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum", "persontotal","agemin","agemax","numfatal","day","month",
"year","modelyear","make","cellphoneuse")
write.csv(df, file = "fulldataset.csv")
}
tableToCSV(fulldataset)
library(readr)
X2015FarsDIS <- read_csv("~/Documents/EMSE 6992 ML/FARS New Data/2015FarsDIS.csv",
col_types = cols(accday = col_number(),
accmon = col_number(), age = col_number(),
body = col_number(), casenum = col_number(),
caseyear = col_number(), dridistact2 = col_number(),
dridistract1 = col_number(), landuse = col_number(),
modelyr = col_number(), numoccs = col_number(),
statenum = col_number(), vfatcount = col_number(),
vnumber = col_number()))
library(readxl)
X2015FarsDIS <- read_excel("~/Documents/EMSE 6992 ML/FARS New Data/2015FarsDIS.xls",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
FARS_15Dis <- as.data.frame(X2015FarsDIS, header = TRUE, as.is=TRUE)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("png", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber,df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$body, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"body","vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
View(FARS_15Dis)
View(FARS_15Dis)
View(fatal_15ds)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber,df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$body, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"body","vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
FARS_15Dis <- as.data.frame(X2015FarsDIS, header = TRUE, as.is=TRUE)
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber,df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$body, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fataldf)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"body","vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
print(YYYY)
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber,df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$body, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fataldf)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"body","vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
X2015FARS <- read_excel("~/Documents/EMSE 6992 ML/Final Project/Data/2015FARS.xls",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric","numeric", "numeric", "numeric","text"))
FARS_15 <- as.data.frame(X2015FARS, header = TRUE, as.is=TRUE)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$pnumber, df$age, df$vfatcount, df$accday, df$accmon,
df$caseyear, df$modelyr, df$make,
df$dridistract),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","pernum", "age", "numfatalveh", "day", "month",
"year","modelyr", "make", "dridistract")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15 <- fatal_YYsetup(FARS_15, 2015)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
print(YYYY)
fataldf <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber,df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fataldf)
colnames(fataldf) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fataldf$age <- as.integer(fataldf$age)
fataldf <- unique(fataldf)
#removes error coded ages
fataldf <- fataldf[fataldf$age < 997,]
return(fataldf)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
print(YYYY)
fatal <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fatal)
colnames(fatal) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fatal$age <- as.integer(fatal$age)
fatal <- unique(fatal)
#removes error coded ages
fatal <- fatal[fatal$age < 997,]
return(fatal)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
print(YYYY)
fatal <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistract2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fatal)
colnames(fatal) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fatal$age <- as.integer(fatal$age)
fatal <- unique(fatal)
#removes error coded ages
fatal <- fatal[fatal$age < 997,]
return(fatal)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
library(readxl)
X2015FarsDIS <- read_excel("~/Documents/EMSE 6992 ML/FARS New Data/2015FarsDIS.xls")
View(X2015FarsDIS)
FARS_15Dis <- as.data.frame(X2015FarsDIS, header = TRUE, as.is=TRUE)
len(FARS_15Dis$age)
length(FARS_15Dis$age)
length(FARS_15Dis$casenum)
length(FARS_15Dis$dridistract1)
length(FARS_15Dis$dridistract2)
length(FARS_15Dis$dridistract3)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
print(YYYY)
fatal <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract1, df$dridistact2, df$dridistract3),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
print(fatal)
colnames(fatal) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridis1", "dridis2", "dridis3")
#Fixing age as num
fatal$age <- as.integer(fatal$age)
fatal <- unique(fatal)
#removes error coded ages
fatal <- fatal[fatal$age < 997,]
return(fatal)
}
fatal_15t <- fatal_YYsetup(FARS_15Dis, 2015)
library(readxl)
FARS2015 <- read_excel("~/Documents/EMSE 6992 ML/Final Project/Data/FARS2015.xls")
FARS_15Dist <- as.data.frame(FARS2015, header = TRUE, as.is=TRUE)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fatal <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fatal) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridis")
#Fixing age as num
fatal$age <- as.integer(fatal$age)
fatal <- unique(fatal)
#removes error coded ages
fatal <- fatal[fatal$age < 997,]
return(fatal)
}
fatal_15t <- fatal_YYsetup(FARS_15Dist, 2015)
library(readxl)
FARS2015 <- read_excel("~/Documents/EMSE 6992 ML/Final Project/Data/FARS2015.xls",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
FARS_15new <- as.data.frame(FARS2015, header = TRUE, as.is=TRUE)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("png", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
fatal_15t <- fatal_YYsetup(FARS_15new, 2015)
View(fatal_15ds)
FARS2016 <- read_excel("~/Documents/EMSE 6992 ML/Final Project/Data/FARS2016.xls",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "text"))
FARS_16new <- as.data.frame(FARS2016, header = TRUE, as.is=TRUE)
fatal_16t <- fatal_YYsetup(FARS_16new, 2016)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf[is.na(ndf)] <- 0
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15final <- separatingDriDistract(fatal_15t)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("gridExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("png", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("pander", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
fatal_15final <- separatingDriDistract(fatal_15t)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf[is.na(ndf)] <- 0
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15final <- separatingDriDistract(fatal_15t)
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
fatal_15final <- separatingDriDistract(fatal_15t)
View(fatal_15t)
View(fatal_16t)
fatal_YYsetup <- function(df, YYYY) {
#df = FARS_YY
#YYYY = case year
y = YYYY
fatal <- as.data.frame(cbind.data.frame(df$casenum, df$statenum, df$vnumber, df$accday, df$accmon,
df$caseyear, df$landuse, df$age, df$vfatcount, df$numoccs,
df$modelyr, df$dridistract),
header = TRUE, as.is = TRUE, stringsAsFactor=FALSE)
colnames(fatal) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "dridistract")
#Fixing age as num
fatal$age <- as.integer(fatal$age)
fatal <- unique(fatal)
#removes error coded ages
fatal <- fatal[fatal$age < 997,]
return(fatal)
}
fatal_15t <- fatal_YYsetup(FARS_15new, 2015)
fatal_16t <- fatal_YYsetup(FARS_16new, 2016)
separatingDriDistract <- function(df) {
ndf <- df
ndf <- ndf %>% separate(dridistract, c("dridistract1", "dridistract2", "dridistract3"), ", ", extra = "warn", fill = "right")
ndf$dridistract1 <- as.integer(ndf$dridistract1)
ndf[is.na(ndf)] <- 0
ndf$dridistract2 <- as.integer(ndf$dridistract2)
ndf$dridistract3 <- as.integer(ndf$dridistract3)
return(ndf)
}
fatal_15final <- separatingDriDistract(fatal_15t)
fatal_16final <- separatingDriDistract(fatal_16t)
findingCellCases <- function(df, YY) {
#df = fatal_YY
#YY = case year
setupfataldis <- function(df) {
setupdrf <- function(df){
#5 = Talking or listening to cell phone
#6 = While dialing Cell phone
#15 = Other cell phone distraction
df$cellphoneuse <- ifelse(df$dridistract1 == 5, 1,
ifelse(df$dridistract2 == 5, 1,
ifelse(df$dridistract3 == 5, 1,
ifelse(df$dridistract1 == 6, 1,
ifelse(df$dridistract2 == 6, 1,
ifelse(df$dridistract3 == 6, 1,
ifelse(df$dridistract1 == 15, 1,
ifelse(df$dridistract2 == 15, 1,
ifelse(df$dridistract3 == 15, 1, 0)))))))))
drop <- c("dridistract1", "dridistract2","dridistract3")
df = df[,!(names(df) %in% drop)]
return(df)
}
fataldisYY <- setupdrf(df)
return(fataldisYY)
}
fataldisYY <- setupfataldis(df)
return(fataldisYY)
}
fatal_15dsfinal <- findingCellCases(fatal_15final, 15)
fatal_16dsfinal <- findingCellCases(fatal_16final, 16)
View(fatal_15dsfinal)
fulldataset <- rbind(fatal_15dsfinal, fatal_16dsfinal)
View(fulldataset)
tableToCSV <- function(df) {
#df = fulldata
row.names(df)<- NULL
colnames(df) <- c("casenum", "statenum", "vehnum","day", "month", "year", "landuse", "age",
"vfatcount", "numoccs", "modelyr", "cellphone_use")
write.csv(df, file = "fulldataset1516.csv")
}
tableToCSV(fulldataset)
